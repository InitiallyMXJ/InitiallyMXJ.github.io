[{"title":"第八届御网杯信息安全大赛MISC题","date":"2024-11-11T01:36:34.000Z","url":"/2024/11/11/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%BE%A1%E7%BD%91%E6%9D%AF%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9BMisc%E9%A2%98/","categories":[["undefined",""]],"content":"第八届御网杯信息安全大赛MISC题一、kitty解压文件给了一个表格 拖入010二进制编辑器打开发现文件头是压缩包 改成zip格式后解压后得到了一个xml格式的文件 拖入010二进制编辑器后发现是一张png图片，继续改后缀 010打开图片发现flag.txt文件，其实这个时候已经得到flag了 为了确保步骤的完整性，使用binwalk进行文件分离 得到一个压缩包 解压得到flag 二、simple_analysis解压后得到一个txt文件打开发现特殊字符 0宽度隐写，但是当时比赛没有工具所以没有做出来 所以比赛后狠狠的给自己说了一顿，以后肯定带脑子去比赛 工具地址： 三、aixin解压后得到一个pyc文件 反编译一下 打开py文件得到一串编码 然后解码 字符串反转 得到flag 四、直播流量流量分析我是真的菜！ 解压后得到一个pcapng文件 wireshark打开 然后我还没明白因为我菜… 等我明白了补上！！！ 重点声明请勿利用文章内的相关技术从事非法测试，由于传播、利用此文所提供的信息或者工具而造成的任何直接或者间接的后果及损失，均由使用者本人负责，所产生的一切不良后果与文章作者无关。该文章仅供学习用途使用。"},{"title":"CVE-2019-10758远程代码执行漏洞","date":"2024-11-10T11:31:54.000Z","url":"/2024/11/10/CVE-2019-10758%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/","categories":[["undefined",""]],"content":"CVE-2019-10758远程代码执行漏洞一、漏洞描述mongo-express是一款mongodb的第三方Web界面，使用node和express开发。如果攻击者可以成功登录，或者目标服务器没有修改默认的账号密码（admin:pass），则可以执行任意node.js代码。 二、影响范围mongo-express &lt;0.54.0 三、环境搭建攻击机：kali 靶机：Centos7 工具：Hackbar 下载vulhub切换到CVE-2019-10758目录下运行： 镜像拉取成功 四、漏洞复现在/checkValid的document使用POC测试 直接发送如下数据包，即可执行代码 页面显示Valid 在kali攻击机上创建shell脚本 IP和端口设置自己的NC监听的 在当前目录使用python开启http服务，因为python开启http是以当前目录为根目录，方便我们下载。 nc开启监听 控制被攻击端进行远程下载我们Kali上的shell脚本 页面显示Valid 再控制被攻击端进行执行shell脚本 成功反弹shell，拿下这台靶机 五、修复建议升级mongo-express到0.54.0或更高版本 重点声明请勿利用文章内的相关技术从事非法测试，由于传播、利用此文所提供的信息或者工具而造成的任何直接或者间接的后果及损失，均由使用者本人负责，所产生的一切不良后果与文章作者无关。该文章仅供学习用途使用。"},{"title":"nmap一些常用指令","date":"2024-11-10T11:24:13.000Z","url":"/2024/11/10/nmap%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/","categories":[["undefined",""]],"content":"一、nmap主机发现1、 Ping 扫描 2、禁用 DNS 解析的 Ping 扫描 3、 ICMP Ping 扫描 4、 TCP SYN Ping 扫描 通过向指定端口发送 TCP SYN 包来检测主机是否存活。例如： 5、 TCP ACK Ping 扫描 通过向指定端口发送 TCP ACK 包来发现在线主机。例如： 6、 UDP Ping 扫描 使用 UDP ping 扫描目标主机。例如： 7、 跳过 Ping 扫描 8、ARP 扫描 (局域网内) 9、仅使用特定的 Ping 类型可以组合使用多种 ping 类型，以提高主机发现的成功率。例如: 10、 主机发现和详细输出 11、 使用特定 IP 片段进行发现 二、nmap端口扫描1、基本扫描 2、扫描指定端口 扫描目标主机上的指定端口，例如： 3、扫描端口范围 扫描指定范围的端口，例如： 4、快速扫描 (常用的 1000 个端口) 5、 扫描所有端口 (0-65535) 6、 服务版本检测 7、 操作系统检测 8、 TCP SYN 扫描（默认） 9、 UDP 扫描 10、 禁止 DNS 解析 11、服务版本和操作系统同时检测 12、 节省带宽和资源的扫描 13、 以 ping 方式发现主机 未完待续。。。 后续会补充！！！ 重点声明请勿利用文章内的相关技术从事非法测试，由于传播、利用此文所提供的信息或者工具而造成的任何直接或者间接的后果及损失，均由使用者本人负责，所产生的一切不良后果与文章作者无关。该文章仅供学习用途使用。"},{"title":"第八届御网杯信息安全大赛Web题-创建中的网站","date":"2024-11-10T06:04:19.000Z","url":"/2024/11/10/%E7%AC%AC%E5%85%AB%E5%B1%8A%E5%BE%A1%E7%BD%91%E6%9D%AF%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9BWeb%E9%A2%98-%E5%88%9B%E5%BB%BA%E4%B8%AD%E7%9A%84%E7%BD%91%E7%AB%99/","categories":[["undefined",""]],"content":"第八届”御网杯”信息安全大赛Web 题-创建中的网站当时我记得全高职组都没有解出来，我们队Web也就差这一道题。 一、漏洞介绍ThinkPHP3.2.3缓存函数设计缺陷漏洞 该漏洞复现起来比较复杂，虽然需要同时满足很多条件才可以导致GetShell，不过风险确实存在，对于黑客来说任何一点细微的风险都有可能是整个攻击链条中重要的一环。触发代码执行漏洞至少需要同时满足以下条件： 开启缓存功能 缓存文件所在目录可以从浏览器直接访问 需要能够猜解出缓存的文件名（文件名生成有一定规律） 同时可以控制缓存文件里的内容（比如通过写入到数据库进而生成缓存文件） 二、本地环境复现我记得当时页面大概就是这样。尽力了，环境只能整到这样了。 说一下我当时的思路，我当时直接使用御剑扫的目录 当时扫到了README.md页面，我当时直接访问，发现是一个ThinkPHP框架。 然后我直接用thinkphp框架扫描工具直接扫 发现日志泄露漏洞 好吧，我挺菜的，比赛访问的时候一堆日志，我承认我看不懂。。。 当时想试试有没有文件包含，然后传参后页面报错意外得到框架的版本 然后我在电脑上看有没有之前收集的POC 好吧我承认我当时确实笨。。。 我电脑上确实有这道题的POC 我硬是没做出来。。。 为了触发TP 3.2.3 Demo 的 GetShell 漏洞，先发起如下请求： 当时我根据我有的POC写入一句话木马。 然后我找不到了！！！ 不要问我为什么找不到为什么不百度，因为比赛的时候全是断网的。 当时就到了这一步，后面我放弃了，因为我也不知道木马到底进去了没，就算是进去了我觉得我也找不到。。 因为我是本地浮现，然后现在我可以直接看根目录 木马确实进去了，但是文件名字改了 下一步需要对缓存的文件名进行猜解，文件名的生成规则是缓存的key的MD5，所以黑盒情况下可以先算一些关键词的MD5，然后批量HEAD请求，发现响应200则说明存在这个缓存文件，或者结合源代码泄露漏洞进行利用。 当时确实没看懂这段话！！！ 至于这个缓存名称 就是 中的name的md5 好吧我承认我沉默了。。 批量HEAD请求得到缓存文件名称然后访问 用蚁剑连接木马 成功连接 得到手动写入的flag！！！ 三、免责声明1、本人不对学习笔记中的任何内容的准确性、完整性、适用性或可靠性承担任何责任。使用者在使用学习笔记中的内容时，应自行承担风险。 2、本人不保证学习笔记中的内容不会侵犯任何第三方的知识产权或其他合法权益。如果使用者认为学习笔记中的内容侵犯了其合法权益，请及时与本人联系，本人将在合理的时间内予以处理。 3、本人不对因使用学习笔记中的内容而导致的任何损失或损害承担责任，包括但不限于直接损失、间接损失、附带损失、特殊损失或后果性损失等。 第一篇写的有点拉。。。 博客刚搭起来水一篇，以后会写的更好！！！ 大佬勿喷我是小白！！！"}]